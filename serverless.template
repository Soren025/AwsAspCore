{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Transform":"AWS::Serverless-2016-10-31",
    "Description":"An AWS Serverless Application that uses the ASP.NET Core framework running in Amazon Lambda.",
    "Parameters":{
        "MoviesTableName": {
            "Type": "String",
            "Default": "movies",
            "Description": "Name for table that holds questions and answers",
            "MinLength": "3",
            "MaxLength": "50",
            "AllowedPattern": "^[A-Za-z_.-]+$"
        },
        "ImageStorageBucketName": {
            "Type": "String",
            "Default": "image-storage",
            "Description": "Name of the S3 bucket used to store images",
            "MinLength": "3",
            "MaxLength": "50",
            "AllowedPattern": "^[A-Za-z_.-]+$"
        }
    },
    "Resources":{

        "MoviesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "MoviesTableName"
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST"
            }
        },

        "ImageStorage": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {
                    "Ref": "ImageStorageBucketName"
                }
            }
        },

        "AspNetCoreFunction":{
            "Type":"AWS::Serverless::Function",
            "Properties":{
                "Handler":"AwsAspCore::AwsAspCore.LambdaEntryPoint::FunctionHandlerAsync",
                "Runtime":"dotnetcore3.1",
                "CodeUri":"",
                "MemorySize":512,
                "Timeout":30,
                "Role":null,
                "Policies":[
                    {
                        "DynamoDBCrudPolicy": {
                            "TableName": {
                                "Ref": "MoviesTable"
                            }
                        }
                    },
                    {
                        "S3CrudPolicy": {
                            "BucketName": {
                                "Ref": "ImageStorage"
                            }
                        }
                    },
                    {
                        "Statement": {
                            "Effect": "Allow",
                            "Action": [
                                "ssm:PutParameter",
                                "ssm:GetParametersByPath"
                            ],
                            "Resource": "*"
                        }
                    }
                ],
                "Environment":{
                    "Variables":{
                        "MOVIES_TABLE_NAME": {
                            "Ref": "MoviesTableName"
                        },
                        "IMAGE_STORAGE_BUCKET_NAME": {
                            "Ref": "ImageStorageBucketName"
                        }
                    }
                },
                "Events":{
                    "ProxyResource":{
                        "Type":"HttpApi",
                        "Properties":{
                            "Path":"/{proxy+}",
                            "Method":"ANY"
                        }
                    },
                    "RootResource":{
                        "Type":"HttpApi",
                        "Properties":{
                            "Path":"/",
                            "Method":"ANY"
                        }
                    }
                }
            }
        }
    },
    "Outputs":{
        "ApiURL":{
            "Description":"API endpoint URL for Prod environment",
            "Value":{
                "Fn::Sub":"https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
            }
        }
    }
}